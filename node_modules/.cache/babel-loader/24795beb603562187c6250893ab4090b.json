{"ast":null,"code":"import _toConsumableArray from \"/Users/benjamin/Documents/jammming/jammming/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/benjamin/Documents/jammming/jammming/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/benjamin/Documents/jammming/jammming/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/benjamin/Documents/jammming/jammming/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/benjamin/Documents/jammming/jammming/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/benjamin/Documents/jammming/jammming/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/benjamin/Documents/jammming/jammming/src/Components/App/App.js\";\nimport React from 'react';\nimport Spotify from '../../util/Spotify';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport './App.css';\nSpotify.getAccessToken();\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      searchResults: [],\n      playlistName: 'My playlist',\n      playlistTracks: []\n    };\n\n    _this._bind('updatePlaylistName', 'addTrack', 'removeTrack', 'savePlaylist', 'search');\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"updatePlaylistName\",\n    value: function updatePlaylistName(name) {\n      this.setState({\n        playlistName: name\n      });\n    }\n  }, {\n    key: \"addTrack\",\n    value: function addTrack(track) {\n      if (!this.state.playlistTracks.find(function (playlistTrack) {\n        return playlistTrack.id === track.id;\n      })) {\n        this.setState(function (prevState) {\n          return {\n            playlistTracks: [].concat(_toConsumableArray(prevState.playlistTracks), [track])\n          };\n        });\n      }\n    }\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track) {\n      this.setState({\n        playlistTracks: this.state.playlistTracks.filter(function (playlistTrack) {\n          return playlistTrack.id !== track.id;\n        })\n      });\n    }\n  }, {\n    key: \"savePlaylist\",\n    value: function savePlaylist() {\n      var trackUris = this.state.playlistTracks.map(function (playlistTrack) {\n        return playlistTrack.uri;\n      });\n      Spotify.savePlaylist(this.state.playlistName, trackUris);\n      this.setState({\n        searchResults: []\n      });\n      this.updatePlaylistName('My playlist');\n      console.info(trackUris);\n    }\n  }, {\n    key: \"search\",\n    value: function search(term) {\n      var _this2 = this;\n\n      console.log(term);\n      Spotify.search(term).then(function (searchResults) {\n        return _this2.setState({\n          searchResults: searchResults\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Ja\", React.createElement(\"span\", {\n        className: \"highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"mmm\"), \"ing\"), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        onSearch: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App-playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(SearchResults, {\n        searchResults: this.state.searchResults,\n        onAdd: this.addTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Playlist, {\n        name: this.state.playlistName,\n        tracks: this.state.playlistTracks,\n        onRemove: this.removeTrack,\n        onNameChange: this.updatePlaylistName,\n        onSave: this.savePlaylist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/benjamin/Documents/jammming/jammming/src/Components/App/App.js"],"names":["React","Spotify","SearchBar","SearchResults","Playlist","getAccessToken","App","props","state","searchResults","playlistName","playlistTracks","_bind","name","setState","track","find","playlistTrack","id","prevState","filter","trackUris","map","uri","savePlaylist","updatePlaylistName","console","info","term","log","search","then","addTrack","removeTrack","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Spotify from '../../util/Spotify';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport './App.css';\n\nSpotify.getAccessToken();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'My playlist',\n      playlistTracks: []\n    }\n    this._bind('updatePlaylistName', 'addTrack', 'removeTrack', 'savePlaylist', 'search');\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  addTrack(track) {\n    if (!this.state.playlistTracks.find(playlistTrack => playlistTrack.id === track.id)) {\n      this.setState(prevState => ({\n        playlistTracks: [...prevState.playlistTracks, track]\n      }));\n    }\n  }\n\n  removeTrack(track) {\n    this.setState({\n      playlistTracks: this.state.playlistTracks.filter(playlistTrack => playlistTrack.id !== track.id)\n    });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(playlistTrack => playlistTrack.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris);\n    this.setState({\n      searchResults: []\n    });\n    this.updatePlaylistName('My playlist');\n    console.info(trackUris);\n  }\n\n  search(term) {\n    console.log(term);\n    Spotify.search(term)\n      .then(searchResults => this.setState({\n        searchResults: searchResults\n      }));\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n            <Playlist\n              name={this.state.playlistName}\n              tracks={this.state.playlistTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}