{"ast":null,"code":"var clientId = '4f54bf48b31c4c38818c9d02a8fbaf44';\nvar redirectUri = 'http://localhost:3000/';\nvar spotifyUrl = \"https://accounts.spotify.com/authorize?response_type=token&scope=playlist-modify-public&client_id=\".concat(clientId, \"&redirect_uri=\").concat(redirectUri);\nvar accessToken = undefined;\nvar expiresIn = undefined;\nvar Spotify = {\n  getAccessToken: function getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n\n    var urlAccessToken = window.location.href.match(/access_token=([^&]*)/);\n    var urlExpiresIn = window.location.href.match(/expires_in=([^&]*)/);\n\n    if (urlAccessToken && urlExpiresIn) {\n      accessToken = urlAccessToken[1];\n      expiresIn = urlExpiresIn[1];\n      window.setTimeout(function () {\n        return accessToken = '';\n      }, expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/');\n    } else {\n      window.location = spotifyUrl;\n    }\n  },\n  search: function search(term) {\n    var searchUrl = \"https://api.spotify.com/v1/search?type=track&q=\".concat(term.replace(' ', '%20'));\n    return fetch(searchUrl, {\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken)\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (jsonResponse) {\n      if (!jsonResponse.tracks) return [];\n      return jsonResponse.tracks.items.map(function (track) {\n        return {\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri\n        };\n      });\n    });\n  },\n  savePlaylist: function savePlaylist(name, trackUris) {\n    if (!name || !trackUris || trackUris.length === 0) return;\n    var userUrl = 'https://api.spotify.com/v1/me';\n    var headers = {\n      Authorization: \"Bearer \".concat(accessToken)\n    };\n    var userId = undefined;\n    var playlistId = undefined;\n    fetch(userUrl, {\n      headers: headers\n    }).then(function (response) {\n      return response.json();\n    }).then(function (jsonResponse) {\n      return userId = jsonResponse.id;\n    }).then(function () {\n      var createPlaylistUrl = \"https://api.spotify.com/v1/users/\".concat(userId, \"/playlists\");\n      fetch(createPlaylistUrl, {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify({\n          name: name\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (jsonResponse) {\n        return playlistId = jsonResponse.id;\n      }).then(function () {\n        var addPlaylistTracksUrl = \"https://api.spotify.com/v1/users/\".concat(userId, \"/playlists/\").concat(playlistId, \"/tracks\");\n        fetch(addPlaylistTracksUrl, {\n          method: 'POST',\n          headers: headers,\n          body: JSON.stringify({\n            uris: trackUris\n          })\n        });\n      });\n    });\n  }\n};\nexport default Spotify;","map":{"version":3,"sources":["/Users/benjamin/Documents/jammming/jammming/src/util/Spotify.js"],"names":["clientId","redirectUri","spotifyUrl","accessToken","undefined","expiresIn","Spotify","getAccessToken","urlAccessToken","window","location","href","match","urlExpiresIn","setTimeout","history","pushState","search","term","searchUrl","replace","fetch","headers","Authorization","then","response","json","jsonResponse","tracks","items","map","track","id","name","artist","artists","album","uri","savePlaylist","trackUris","length","userUrl","userId","playlistId","createPlaylistUrl","method","body","JSON","stringify","addPlaylistTracksUrl","uris"],"mappings":"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","sourcesContent":["const clientId = '4f54bf48b31c4c38818c9d02a8fbaf44';\nconst redirectUri = 'http://localhost:3000/';\nconst spotifyUrl =`https://accounts.spotify.com/authorize?response_type=token&scope=playlist-modify-public&client_id=${clientId}&redirect_uri=${redirectUri}`;\nlet accessToken = undefined;\nlet expiresIn = undefined;\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n    const urlAccessToken = window.location.href.match(/access_token=([^&]*)/);\n    const urlExpiresIn = window.location.href.match(/expires_in=([^&]*)/);\n    if (urlAccessToken && urlExpiresIn) {\n      accessToken = urlAccessToken[1];\n      expiresIn = urlExpiresIn[1];\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/');\n    } else {\n      window.location = spotifyUrl;\n    }\n  },\n\n  search(term) {\n    const searchUrl = `https://api.spotify.com/v1/search?type=track&q=${term.replace(' ', '%20')}`;\n    return fetch(searchUrl, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      })\n      .then(response => response.json())\n      .then(jsonResponse => {\n        if (!jsonResponse.tracks) return [];\n        return jsonResponse.tracks.items.map(track => {\n          return {\n            id: track.id,\n            name: track.name,\n            artist: track.artists[0].name,\n            album: track.album.name,\n            uri: track.uri\n          }\n        })\n      });\n  },\n\n  savePlaylist(name, trackUris) {\n    if (!name || !trackUris || trackUris.length === 0) return;\n    const userUrl = 'https://api.spotify.com/v1/me';\n    const headers = {\n      Authorization: `Bearer ${accessToken}`\n    };\n    let userId = undefined;\n    let playlistId = undefined;\n    fetch(userUrl, {\n      headers: headers\n    })\n    .then(response => response.json())\n    .then(jsonResponse => userId = jsonResponse.id)\n    .then(() => {\n      const createPlaylistUrl = `https://api.spotify.com/v1/users/${userId}/playlists`;\n      fetch(createPlaylistUrl, {\n          method: 'POST',\n          headers: headers,\n          body: JSON.stringify({\n            name: name\n          })\n        })\n        .then(response => response.json())\n        .then(jsonResponse => playlistId = jsonResponse.id)\n        .then(() => {\n          const addPlaylistTracksUrl = `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`;\n          fetch(addPlaylistTracksUrl, {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify({\n              uris: trackUris\n            })\n          });\n        })\n    })\n  }\n};\n\nexport default Spotify;\n"]},"metadata":{},"sourceType":"module"}