{"ast":null,"code":"import _classCallCheck from \"/Users/benjamin/Desktop/project-jammming/jammming/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/benjamin/Desktop/project-jammming/jammming/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/benjamin/Desktop/project-jammming/jammming/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/benjamin/Desktop/project-jammming/jammming/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/benjamin/Desktop/project-jammming/jammming/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/benjamin/Desktop/project-jammming/jammming/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/benjamin/Desktop/project-jammming/jammming/src/Components/Track/Track.js\";\nimport React from 'react';\nimport './Track.css';\n\nvar Track =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Track, _React$Component);\n\n  function Track(props) {\n    var _this;\n\n    _classCallCheck(this, Track);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Track).call(this, props));\n    _this.state = {\n      currentlyPlaying: false\n    };\n    _this.addTrack = _this.addTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeTrack = _this.removeTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.togglePlayPreview = _this.togglePlayPreview.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.audioEnded = this.audioEnded.bind(this);\n\n    _this.renderPreviewIcon = _this.renderPreviewIcon.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Adds this.props.track as an argument to the addTrack method in App.js\n\n\n  _createClass(Track, [{\n    key: \"addTrack\",\n    value: function addTrack() {\n      this.props.onAdd(this.props.track);\n    } // Adds this.props.track as an argument to the removeTrack method in App.js\n\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack() {\n      this.props.onRemove(this.props.track);\n    } // Renders either a + or a - link to add or remove tracks from playlist.\n\n  }, {\n    key: \"renderAction\",\n    value: function renderAction() {\n      if (this.props.isRemoval) {\n        return React.createElement(\"i\", {\n          className: \"Track-action fa fa-minus-circle\",\n          onClick: this.removeTrack,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"i\", {\n        className: \"Track-action fa fa-plus-circle\",\n        onClick: this.addTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"togglePlayPreview\",\n    value: function togglePlayPreview() {\n      var audio = this.refs.audio;\n\n      if (!this.state.currentlyPlaying) {\n        audio.play();\n        this.setState({\n          currentlyPlaying: true\n        });\n      } else {\n        audio.pause();\n        this.setState({\n          currentlyPlaying: false\n        });\n      }\n    } // audioEnded() {\n    //     this.setState({\n    //         currentlyPlaying: false\n    //     });\n    // }\n\n  }, {\n    key: \"renderPreviewIcon\",\n    value: function renderPreviewIcon() {\n      if (this.props.track.preview) {\n        if (!this.state.currentlyPlaying) {\n          return React.createElement(\"i\", {\n            className: \"fa fa-play Track-preview-icon\",\n            \"aria-hidden\": \"true\",\n            onClick: this.togglePlayPreview,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(\"i\", {\n            className: \"fa fa-pause Track-preview-icon\",\n            \"aria-hidden\": \"true\",\n            onClick: this.togglePlayPreview,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          });\n        }\n      } else {\n        return React.createElement(\"p\", {\n          className: \"Track-preview-unavailable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"No \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), \" Preview \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), \"Available\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Track\",\n        key: this.props.track.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Track-cover-preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"audio\", {\n        ref: \"audio\",\n        src: this.props.track.preview,\n        onEnded: function onEnded() {\n          return _this2.setState({\n            currentlyPlaying: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"Track-preview-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.renderPreviewIcon()), React.createElement(\"img\", {\n        className: \"Track-album-cover\",\n        src: this.props.track.cover,\n        alt: \"album cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Track-information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.props.track.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.props.track.artist, \" | \", this.props.track.album)), this.renderAction());\n    }\n  }]);\n\n  return Track;\n}(React.Component);\n\nexport default Track;","map":{"version":3,"sources":["/Users/benjamin/Desktop/project-jammming/jammming/src/Components/Track/Track.js"],"names":["React","Track","props","state","currentlyPlaying","addTrack","bind","removeTrack","togglePlayPreview","renderPreviewIcon","onAdd","track","onRemove","isRemoval","audio","refs","play","setState","pause","preview","id","cover","name","artist","album","renderAction","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;IAEMC,K;;;;;AAEF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,gBAAgB,EAAE;AADT,KAAb;AAGA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AACA,UAAKE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBF,IAAvB,uDAAzB,CAPe,CAQf;;AACA,UAAKG,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBH,IAAvB,uDAAzB;AATe;AAUlB,G,CACD;;;;;+BACW;AACP,WAAKJ,KAAL,CAAWQ,KAAX,CAAiB,KAAKR,KAAL,CAAWS,KAA5B;AACH,K,CAED;;;;kCACc;AACV,WAAKT,KAAL,CAAWU,QAAX,CAAoB,KAAKV,KAAL,CAAWS,KAA/B;AACH,K,CAED;;;;mCACe;AACX,UAAI,KAAKT,KAAL,CAAWW,SAAf,EAA0B;AACtB,eAAO;AAAK,UAAA,SAAS,EAAC,iCAAf;AACK,UAAA,OAAO,EAAE,KAAKN,WADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH;;AACD,aAAO;AAAK,QAAA,SAAS,EAAC,gCAAf;AACK,QAAA,OAAO,EAAE,KAAKF,QADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEH;;;wCAEmB;AAChB,UAAMS,KAAK,GAAG,KAAKC,IAAL,CAAUD,KAAxB;;AACA,UAAI,CAAC,KAAKX,KAAL,CAAWC,gBAAhB,EAAkC;AAC9BU,QAAAA,KAAK,CAACE,IAAN;AACA,aAAKC,QAAL,CAAc;AACVb,UAAAA,gBAAgB,EAAE;AADR,SAAd;AAGH,OALD,MAKO;AACHU,QAAAA,KAAK,CAACI,KAAN;AACA,aAAKD,QAAL,CAAc;AACVb,UAAAA,gBAAgB,EAAE;AADR,SAAd;AAGH;AACJ,K,CAED;AACA;AACA;AACA;AACA;;;;wCAEoB;AAChB,UAAG,KAAKF,KAAL,CAAWS,KAAX,CAAiBQ,OAApB,EAA6B;AACzB,YAAI,CAAC,KAAKhB,KAAL,CAAWC,gBAAhB,EAAkC;AAC9B,iBACI;AAAI,YAAA,SAAS,EAAC,+BAAd;AACI,2BAAY,MADhB;AAEI,YAAA,OAAO,EAAE,KAAKI,iBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,SAND,MAMO;AACH,iBACQ;AAAI,YAAA,SAAS,EAAC,gCAAd;AACI,2BAAY,MADhB;AAEI,YAAA,OAAO,EAAE,KAAKA,iBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAKH;AACJ,OAdD,MAcO;AACH,eAAO;AAAG,UAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA5C,eAA0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA1D,cAAP;AACH;AACJ;;;6BAEQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,GAAG,EAAE,KAAKN,KAAL,CAAWS,KAAX,CAAiBS,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,GAAG,EAAC,OAAX;AAAmB,QAAA,GAAG,EAAE,KAAKlB,KAAL,CAAWS,KAAX,CAAiBQ,OAAzC;AAAkD,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACF,QAAL,CAAc;AAAEb,YAAAA,gBAAgB,EAAE;AAApB,WAAd,CAAN;AAAA,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKK,iBAAL,EADL,CAFJ,EAKI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,GAAG,EAAE,KAAKP,KAAL,CAAWS,KAAX,CAAiBU,KAAzD;AAAgE,QAAA,GAAG,EAAC,aAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ,EAQI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKnB,KAAL,CAAWS,KAAX,CAAiBW,IAAtB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKpB,KAAL,CAAWS,KAAX,CAAiBY,MAArB,SAAgC,KAAKrB,KAAL,CAAWS,KAAX,CAAiBa,KAAjD,CAFJ,CARJ,EAYK,KAAKC,YAAL,EAZL,CADJ;AAgBH;;;;EA3FezB,KAAK,CAAC0B,S;;AA8F1B,eAAezB,KAAf","sourcesContent":["import React from 'react';\nimport './Track.css';\n\nclass Track extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            currentlyPlaying: false,\n        };\n        this.addTrack = this.addTrack.bind(this);\n        this.removeTrack = this.removeTrack.bind(this);\n        this.togglePlayPreview = this.togglePlayPreview.bind(this);\n        // this.audioEnded = this.audioEnded.bind(this);\n        this.renderPreviewIcon = this.renderPreviewIcon.bind(this);\n    }\n    // Adds this.props.track as an argument to the addTrack method in App.js\n    addTrack() {\n        this.props.onAdd(this.props.track);\n    }\n\n    // Adds this.props.track as an argument to the removeTrack method in App.js\n    removeTrack() {\n        this.props.onRemove(this.props.track);\n    }\n    \n    // Renders either a + or a - link to add or remove tracks from playlist.\n    renderAction() {\n        if (this.props.isRemoval) {\n            return <i   className=\"Track-action fa fa-minus-circle\" \n                        onClick={this.removeTrack}></i>\n        }\n        return <i   className=\"Track-action fa fa-plus-circle\" \n                    onClick={this.addTrack}></i>\n    }\n\n    togglePlayPreview() {\n        const audio = this.refs.audio;\n        if (!this.state.currentlyPlaying) {\n            audio.play();\n            this.setState({ \n                currentlyPlaying: true, \n            });\n        } else {\n            audio.pause();\n            this.setState({ \n                currentlyPlaying: false,\n            });\n        }\n    }\n\n    // audioEnded() {\n    //     this.setState({\n    //         currentlyPlaying: false\n    //     });\n    // }\n\n    renderPreviewIcon() {\n        if(this.props.track.preview) {\n            if (!this.state.currentlyPlaying) {\n                return (\n                    <i  className=\"fa fa-play Track-preview-icon\" \n                        aria-hidden=\"true\" \n                        onClick={this.togglePlayPreview}></i>\n                );\n            } else {\n                return (\n                        <i  className=\"fa fa-pause Track-preview-icon\" \n                            aria-hidden=\"true\" \n                            onClick={this.togglePlayPreview}></i>\n                );\n            }\n        } else {\n            return <p className=\"Track-preview-unavailable\">No <br/> Preview <br />Available</p>\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"Track\" key={this.props.track.id}>\n                <div className=\"Track-cover-preview\">\n                    <audio ref=\"audio\" src={this.props.track.preview} onEnded={() => this.setState({ currentlyPlaying: false })}></audio>\n                    <div className=\"Track-preview-container\">\n                        {this.renderPreviewIcon()}\n                    </div>\n                    <img className=\"Track-album-cover\" src={this.props.track.cover} alt=\"album cover\"/>\n                </div>\n                <div className=\"Track-information\">\n                    <h3>{this.props.track.name}</h3>\n                    <p>{this.props.track.artist} | {this.props.track.album}</p>\n                </div>\n                {this.renderAction()}\n            </div>\n        );\n    }\n}\n\nexport default Track;"]},"metadata":{},"sourceType":"module"}